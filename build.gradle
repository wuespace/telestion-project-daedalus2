plugins {
    id 'java'
    id 'maven'
    id 'application'
}

group 'org.telestion.telestiontemplate'
version '1.0-SNAPSHOT'

sourceCompatibility = gradle.sourceCompatibility
targetCompatibility = gradle.targetCompatibility

application {
    applicationDefaultJvmArgs = ['--enable-preview']
    mainClassName = 'org.telestion.application.Telestion'
}


repositories {
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/TelestionTeam/telestion/")
        credentials {
            username = System.getenv("GITHUB_ACTOR")
            password = System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.12.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.1'
    implementation "io.vertx:vertx-core:4.0.2"
    compile 'io.github.telestionteam:telestion-api:0.0.11'
    compile 'io.github.telestionteam:telestion-app:0.0.11'
    compile 'io.github.telestionteam:telestion-services:0.0.11'
    compile 'io.github.telestionteam:telestion-examples:0.0.11'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaExec) {
    systemProperties System.properties
    systemProperties "hazelcast.logging.type":"slf4j"

    //enable modules for hazelcast
    jvmArgs += ["--add-modules", "java.se",
                "--add-exports", "java.base/jdk.internal.ref=ALL-UNNAMED",
                "--add-opens", "java.base/java.lang=ALL-UNNAMED",
                "--add-opens", "java.base/java.nio=ALL-UNNAMED",
                "--add-opens", "java.base/sun.nio.ch=ALL-UNNAMED",
                "--add-opens", "java.management/sun.management=ALL-UNNAMED",
                "--add-opens", "jdk.management/com.sun.management.internal=ALL-UNNAMED"]
}

//enable preview features
tasks.withType(JavaCompile) {
    options.compilerArgs += "--enable-preview"
}
tasks.withType(Test) {
    jvmArgs += "--enable-preview"
    ignoreFailures = true
    reports {
        junitXml.enabled = true
    }
}
tasks.withType(JavaExec) {
    jvmArgs += '--enable-preview'
}
